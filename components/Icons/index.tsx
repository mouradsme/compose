const ChevronLeft = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      fill="currentColor"
      className="mi-outline mi-chevron-left"
      viewBox="0 0 24 24"
    >
      <path d="M14.71 6.71a.996.996 0 0 0-1.41 0L8.71 11.3a.996.996 0 0 0 0 1.41l4.59 4.59a.996.996 0 1 0 1.41-1.41L10.83 12l3.88-3.88c.39-.39.38-1.03 0-1.41Z" />
    </svg>
  );
};

const ChevronRight = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      fill="currentColor"
      className="mi-outline mi-chevron-right"
      viewBox="0 0 24 24"
    >
      <path d="M9.29 6.71a.996.996 0 0 0 0 1.41L13.17 12l-3.88 3.88a.996.996 0 1 0 1.41 1.41l4.59-4.59a.996.996 0 0 0 0-1.41L10.7 6.7c-.38-.38-1.02-.38-1.41.01Z" />
    </svg>
  );
};

const Teacher = (props: any) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 512 512"
      style={{
        enableBackground: 'new 0 0 512 512',
      }}
      {...props}
    >
      <path d="M75.253 309.145H41.454c-5.771 0-10.449 4.678-10.449 10.449s4.678 10.449 10.449 10.449h33.798c5.771 0 10.449-4.678 10.449-10.449s-4.678-10.449-10.448-10.449zm0 25.863H41.454c-5.771 0-10.449 4.678-10.449 10.449s4.678 10.449 10.449 10.449h33.798c5.771 0 10.449-4.678 10.449-10.449s-4.678-10.449-10.448-10.449zm0 25.862H41.454c-5.771 0-10.449 4.678-10.449 10.449s4.678 10.449 10.449 10.449h33.798c5.771 0 10.449-4.678 10.449-10.449s-4.678-10.449-10.448-10.449zm81.01-51.725h-11.404c-5.771 0-10.449 4.678-10.449 10.449s4.678 10.449 10.449 10.449h11.404c5.771 0 10.449-4.678 10.449-10.449s-4.678-10.449-10.449-10.449zm-.783 25.863h-10.62c-5.771 0-10.449 4.678-10.449 10.449s4.678 10.449 10.449 10.449h10.62c5.771 0 10.449-4.678 10.449-10.449s-4.678-10.449-10.449-10.449zM10.586 484.315h-.137C4.678 484.315 0 488.993 0 494.764s4.678 10.449 10.449 10.449h.137c5.771 0 10.449-4.678 10.449-10.449s-4.678-10.449-10.449-10.449zm490.965 0h-.137c-5.771 0-10.449 4.678-10.449 10.449s4.678 10.449 10.449 10.449h.137c5.771 0 10.449-4.678 10.449-10.449s-4.678-10.449-10.449-10.449zM294.106 205.328c-6.441 0-11.68 5.239-11.68 11.68 0 6.44 5.239 11.679 11.68 11.679s11.68-5.239 11.68-11.679c0-6.441-5.239-11.68-11.68-11.68zm-76.212 0c-6.441 0-11.68 5.239-11.68 11.68 0 6.44 5.239 11.679 11.68 11.679 6.44 0 11.679-5.239 11.68-11.679-.001-6.441-5.24-11.68-11.68-11.68zm48.361 49.23h-20.422c-5.771 0-10.449 4.678-10.449 10.449 0 11.391 9.268 20.66 20.66 20.66s20.659-9.267 20.66-20.66c0-5.771-4.678-10.449-10.449-10.449zm30.329 184.827h-.137c-5.771 0-10.449 4.678-10.449 10.449s4.678 10.449 10.449 10.449h.137c5.771 0 10.449-4.678 10.449-10.449s-4.678-10.449-10.449-10.449zm73.006 0h-39.203c-5.771 0-10.449 4.678-10.449 10.449s4.678 10.449 10.449 10.449h39.203c5.771 0 10.449-4.678 10.449-10.449s-4.678-10.449-10.449-10.449zm-154.29 0h-.137c-5.771 0-10.449 4.678-10.449 10.449s4.678 10.449 10.449 10.449h.137c5.771 0 10.449-4.678 10.449-10.449s-4.678-10.449-10.449-10.449zm-33.941 0h-39.201c-5.771 0-10.449 4.678-10.449 10.449s4.678 10.449 10.449 10.449h39.201c5.771 0 10.449-4.678 10.449-10.449s-4.678-10.449-10.449-10.449zM484.36 66.817c-.033-15.817-12.91-28.673-28.734-28.673-15.824 0-28.701 12.856-28.735 28.673l-3.657 360.968v.106c0 17.86 14.531 32.392 32.392 32.392s32.392-14.531 32.392-32.392v-.106L484.36 66.817zm-36.571.167.001-.106c0-4.322 3.515-7.837 7.837-7.837 4.322 0 7.837 3.515 7.837 7.837v.106l2.598 256.417h-20.87l2.597-256.417zm7.838 372.401c-6.323 0-11.47-5.131-11.494-11.449l.847-83.637h21.293l.847 83.637c-.024 6.317-5.171 11.449-11.493 11.449z" />
      <path d="M467.661 484.315H409.64v-70.651c0-20.367-12.292-39.713-29.891-47.047l-67.248-28.019a6.379 6.379 0 0 1-3.936-5.905v-16.271l27.313-15.661c.19-.109.377-.225.561-.346 13.676-9.031 22.657-25.093 24.022-42.965.021-.264.03-.531.03-.796v-8.675c13.569-4.414 23.405-17.182 23.405-32.205 0-15.022-9.836-27.791-23.405-32.205v-5.186c5.962-12.972 30.713-74.012-6.697-121.673-17.287-22.03-38.021-31.39-56.694-26.032-15.796-11.704-34.503-17.407-56.98-17.407-32.002 0-57.836 11.732-76.083 29.388-13.99-10.431-30.94-16.109-48.593-16.109-18.686 0-35.908 6.344-49.663 16.969L48.635 26.374l-.007-.007C48.624 26.365 32.1 9.845 32.1 9.845c-4.08-4.08-10.697-4.08-14.777 0s-4.081 10.697 0 14.777l9.474 9.475c-37.794 45.288-35.449 112.961 7.051 155.461 19.398 19.398 44.596 30.951 71.144 33.342v15.866h-3.206c-5.771 0-10.449 4.678-10.449 10.449s4.678 10.449 10.449 10.449h27.309c5.771 0 10.449-4.678 10.449-10.449s-4.678-10.449-10.449-10.449h-3.206v-15.883c.976-.089 1.952-.191 2.929-.305 2.454 11.977 11.227 21.677 22.691 25.406v8.675c0 .265.01.532.03.796.603 7.894 2.67 15.423 5.947 22.143H10.5c-5.771 0-10.449 4.678-10.449 10.449v136.482c0 5.771 4.678 10.449 10.449 10.449h91.861v47.34h-57.92c-5.771 0-10.449 4.678-10.449 10.449s4.678 10.449 10.449 10.449H467.66c5.771 0 10.449-4.678 10.449-10.449.001-5.772-4.677-10.452-10.448-10.452zM240.119 34.172c26.203 0 40.133 9.316 48.332 16.323a10.45 10.45 0 0 0 11.362 1.452c10.727-5.22 24.762 1.382 37.541 17.666 21.949 27.964 16.228 63.64 9.907 84.452-4.608-5.502-10.703-11.981-18.566-18.929-5.032-4.448-11.886-7.787-19.143-11.32-8.556-4.167-19.202-9.353-21.219-14.607a10.45 10.45 0 0 0-17.665-3.083c-14.119 16.356-31.669 23.973-55.229 23.973-28.874 0-44.801 15.613-53.079 28.712-.367.58-.72 1.159-1.064 1.738-3.725-11.667-7.125-27.527-7.125-46.541.002-39.244 32.149-79.836 85.948-79.836zm58.125 140.717c-20.593 0-37.867 14.438-42.259 33.721-4.392-19.283-21.665-33.721-42.259-33.721-13.199 0-25.031 5.936-32.988 15.271l-7.7-3.894c2.413-9.558 11.75-35.268 42.401-35.268 25.025 0 45.472-7.26 62.14-22.131 6.467 5.772 14.973 9.915 22.822 13.737 5.68 2.766 11.552 5.627 14.454 8.191 14.736 13.024 22.156 23.861 24.737 28.057v7.147l-8.275 4.259c-7.958-9.391-19.828-15.369-33.073-15.369zm22.452 43.348c0 12.38-10.072 22.452-22.452 22.452s-22.452-10.072-22.452-22.452 10.072-22.451 22.452-22.451 22.452 10.071 22.452 22.451zm-84.518 0c0 12.38-10.072 22.452-22.452 22.452s-22.452-10.072-22.452-22.452 10.072-22.451 22.452-22.451 22.452 10.071 22.452 22.451zM115.441 47.452a60.285 60.285 0 0 1 35.122 11.245c-11.269 16.633-17.289 36.098-17.289 55.31 0 19.52 3.173 36.179 6.983 49.155a60.63 60.63 0 0 1-24.816 5.311c-33.366 0-60.511-27.145-60.511-60.511s27.146-60.51 60.511-60.51zm16.032 153.638a95.139 95.139 0 0 1-15.971 1.367c-.021 0-.04-.003-.061-.003l-.066.003c-24.811.001-48.811-9.741-66.75-27.679-34.345-34.345-36.658-88.759-6.971-125.826l9.347 9.347c-10.626 13.756-16.969 30.978-16.969 49.664 0 44.889 36.52 81.409 81.409 81.409a81.587 81.587 0 0 0 32.018-6.558c.308.689.612 1.355.906 1.982a34.084 34.084 0 0 0-16.892 16.294zm17.53 14.687c0-6.421 4.7-11.751 10.838-12.768l11.57 5.851a43.327 43.327 0 0 0-1.033 9.377c0 23.903 19.447 43.35 43.35 43.35 20.593 0 37.867-14.438 42.259-33.722 4.392 19.283 21.665 33.722 42.259 33.722 23.903 0 43.35-19.447 43.35-43.35 0-3.174-.352-6.267-1.003-9.249l11.605-5.974c6.12 1.03 10.802 6.353 10.802 12.762 0 7.144-5.813 12.956-12.956 12.956-5.771 0-10.449 4.678-10.449 10.449v17.052c-.949 11.05-6.443 21.176-14.421 26.577l-56.1 32.167c-.191.11-.377.225-.561.346-7.831 5.173-17.185 5.174-25.02 0a9.551 9.551 0 0 0-.573-.352l-56.264-32.164c-7.985-5.406-13.285-15.293-14.246-26.572v-17.054c0-5.771-4.678-10.449-10.449-10.449-7.146.001-12.958-5.811-12.958-12.955zm25.894 84.717c.194 0 .382-.019.575-.029.163.106.327.208.495.305l27.469 15.704v16.221a6.382 6.382 0 0 1-3.936 5.905l-67.249 28.02a43.564 43.564 0 0 0-8.992 5.104v-71.23h51.638zm-72.536 113.171h-.001v2.414H20.949v-4.919h81.412v2.505zm0-23.404H20.949v-89.767h81.412v89.767zm143.241 94.054H123.258v-70.652c0-11.777 7.322-23.71 17.031-27.756L195.75 362.8l15.804 44.264a10.448 10.448 0 0 0 18.05 2.951l15.997-20.319v94.619zM214.688 353.69a60.051 60.051 0 0 0 22.249 13.229l-12.057 15.315-10.192-28.544zm9.628-20.488c.003-.17.019-.337.019-.508v-4.275l7.939 4.539c7.334 4.764 15.53 7.145 23.728 7.145 8.199 0 16.398-2.383 23.733-7.149l7.933-4.548v4.288c0 .213.019.422.023.633-7.495 9.917-19.081 15.757-31.638 15.757-12.621.001-24.247-5.886-31.737-15.882zm73.102 20.482-10.193 28.551-12.06-15.318a60.114 60.114 0 0 0 22.253-13.233zm91.324 130.631H266.5v-94.621l15.999 20.321a10.448 10.448 0 0 0 18.05-2.951l15.791-44.227 55.37 23.07c9.709 4.046 17.031 15.978 17.031 27.756v70.652z" />
    </svg>
  );
};

interface FooterLogoProps {
  width?: number;
  height?: number;
}

const FooterLogo = ({ width = 112, height = 41 }: FooterLogoProps) => {
  return (
    <svg width={width} height={height} viewBox={`0 0 ${width} ${height}`}>
      <g transform="translate(0)">
        <g>
          <path
            d="M13.126,0a10.152,10.152,0,0,1,0,14.357l-1.354,1.354a4.509,4.509,0,0,0,6.376,6.376l-1.84,1.84a9.583,9.583,0,0,1-13.647-.092A9.724,9.724,0,0,1,2.9,10.222Z"
            transform="translate(0)"
            fill="#f5f5f5"
          ></path>
          <path
            d="M53.931,81.493a10.152,10.152,0,0,1,0-14.357l1.354-1.354a4.509,4.509,0,0,0-6.376-6.376l1.84-1.84a9.583,9.583,0,0,1,13.647.092,9.724,9.724,0,0,1-.242,13.613Z"
            transform="translate(-35.714 -39.985)"
            fill="#f5f5f5"
          ></path>
          <path
            d="M147.665,56.213H151.7c.143,1.787,1.859,3,4.254,3s4-.929,4-2.323c0-.858-1.072-1.465-4.4-2.109-5.183-1.18-6.827-2.359-6.827-5.326,0-3.324,2.9-5.541,7.221-5.541a7.771,7.771,0,0,1,7.471,4.647l-3.932.965a3.825,3.825,0,0,0-3.539-2.037c-1.752,0-2.931.715-2.931,1.751,0,.751.823,1.215,3.36,1.787,5.969,1.251,7.864,2.61,7.864,5.862,0,3.539-3.325,5.9-8.293,5.9-4.826,0-8.15-2.645-8.293-6.577"
            transform="translate(-107.828 -32.068)"
            fill="#f5f5f5"
          ></path>
          <rect
            width="4.29"
            height="13.826"
            transform="translate(58.28 16.395)"
            fill="#f5f5f5"
          ></rect>
          <rect
            width="4.29"
            height="13.826"
            transform="translate(66.214 16.395)"
            fill="#f5f5f5"
          ></rect>
          <path
            d="M273.521,44.687h4.29V45.74a7.485,7.485,0,0,1,4.861-1.823c4.9,0,8.15,2.9,8.15,7.256V62.29h-4.29V51.674c0-2.395-1.751-3.968-4.361-3.968s-4.361,1.573-4.361,3.968V62.29h-4.29Z"
            transform="translate(-199.73 -32.069)"
            fill="#f5f5f5"
          ></path>
          <path
            d="M345.857,53.353c0-5.648,3.861-9.437,9.687-9.437s9.687,3.789,9.687,9.437v.822l-.358.357H350.218a5.222,5.222,0,0,0,5.326,4.683,5.418,5.418,0,0,0,4.9-3H364.8a9.46,9.46,0,0,1-9.258,6.577c-5.826,0-9.687-3.789-9.687-9.437m14.727-2.395a5.4,5.4,0,0,0-10.08,0Z"
            transform="translate(-252.551 -32.068)"
            fill="#f5f5f5"
          ></path>
          <path
            d="M216.759,43.917v3.292h4.088v-.733a2.559,2.559,0,0,0-2.559-2.559Z"
            transform="translate(-158.282 -32.069)"
            fill="#f5f5f5"
          ></path>
          <path
            d="M245.81,43.917v3.292H249.9v-.733a2.559,2.559,0,0,0-2.559-2.559Z"
            transform="translate(-179.495 -32.069)"
            fill="#f5f5f5"
          ></path>
        </g>
      </g>
    </svg>
  );
};

const Video = () => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="18"
    height="18"
    fill="currentColor"
    className="bi bi-file-play"
    viewBox="0 0 16 16"
  >
    <path d="M6 10.117V5.883a.5.5 0 0 1 .757-.429l3.528 2.117a.5.5 0 0 1 0 .858l-3.528 2.117a.5.5 0 0 1-.757-.43z" />
    <path d="M4 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H4zm0 1h8a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1z" />
  </svg>
);

const Lock = () => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="18"
    height="18"
    fill="currentColor"
    className="bi bi-lock"
    viewBox="0 0 16 16"
  >
    <path d="M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2zM5 8h6a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1z" />
  </svg>
);

const QuizzText = () => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="18"
    height="18"
    fill="currentColor"
    className="bi bi-card-text"
    viewBox="0 0 16 16"
  >
    <path d="M14.5 3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h13zm-13-1A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-13z" />
    <path d="M3 5.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zM3 8a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9A.5.5 0 0 1 3 8zm0 2.5a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5z" />
  </svg>
);

const Checked = () => (
  <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24">
    <path d="M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z" />
  </svg>
);

const Tick = () => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="16"
    height="16"
    fill="currentColor"
    className="bi bi-check-circle"
    viewBox="0 0 16 16"
  >
    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
    <path d="M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z" />
  </svg>
);

const Close = () => (
  <svg
    id="vuesax_linear_close-square"
    data-name="vuesax/linear/close-square"
    xmlns="http://www.w3.org/2000/svg"
    width="14.596"
    height="14.596"
    viewBox="0 0 14.596 14.596"
  >
    <g id="close-square" transform="translate(0)">
      <path
        id="Vector"
        d="M4.257,12.163H7.906c3.041,0,4.257-1.216,4.257-4.257V4.257C12.163,1.216,10.947,0,7.906,0H4.257C1.216,0,0,1.216,0,4.257V7.906C0,10.947,1.216,12.163,4.257,12.163Z"
        transform="translate(1.216 1.216)"
        fill="#ff4067"
      />
      <path
        id="Vector-2"
        data-name="Vector"
        d="M0,3.442,3.442,0"
        transform="translate(5.577 5.577)"
        fill="none"
        stroke="#fff"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="1"
      />
      <path
        id="Vector-3"
        data-name="Vector"
        d="M3.442,3.442,0,0"
        transform="translate(5.577 5.577)"
        fill="none"
        stroke="#fff"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="1"
      />
      <path id="Vector-4" data-name="Vector" d="M0,0H14.6V14.6H0Z" fill="none" opacity="0" />
    </g>
  </svg>
);

const ArrowLeft = () => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="20"
    height="20"
    fill="currentColor"
    className="bi bi-arrow-left"
    viewBox="0 0 16 16"
  >
    <path
      fill-rule="evenodd"
      d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z"
    />
  </svg>
);

interface IconProps {
  width?: number;
  height?: number;
  fill?: string;
}

const User = ({ width = 32, height = 32, fill = '#7c8da6' }: IconProps) => (
  <svg
    id="user--avatar--filled--alt"
    xmlns="http://www.w3.org/2000/svg"
    width={width}
    height={height}
    viewBox="0 0 32 32"
  >
    <path
      id="Path_11973"
      data-name="Path 11973"
      d="M16,8a5,5,0,1,0,5,5,5,5,0,0,0-5-5Z"
      fill={fill}
    />
    <path
      id="Path_11974"
      data-name="Path 11974"
      d="M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm7.993,22.926A5,5,0,0,0,19,20H13a5,5,0,0,0-4.993,4.926,12,12,0,1,1,15.985,0Z"
      fill={fill}
    />
    <rect
      id="_Transparent_Rectangle_"
      data-name="&lt;Transparent Rectangle&gt;"
      width="32"
      height="32"
      fill="none"
    />
  </svg>
);

const Password = () => (
  <svg
    id="ibm-security"
    xmlns="http://www.w3.org/2000/svg"
    width="32"
    height="32.044"
    viewBox="0 0 32 32.044"
  >
    <path
      id="IBM_Security_Shield"
      data-name="IBM Security Shield"
      d="M16,0,4,5.978V20.044a12,12,0,1,0,24,0V5.978Zm6.83,27.314L16,23.912V26.14l5.036,2.509A10,10,0,0,1,6,20.044V7.21L16,2.228,26,7.21v3.75L16,5.978V8.206l10,4.982v3.75L16,11.956v2.228l10,4.982v.879a9.9,9.9,0,0,1-.37,2.687L16,17.934v2.228l8.9,4.431a10.025,10.025,0,0,1-2.065,2.721Z"
      fill="#7c8da6"
    />
    <rect
      id="_Transparent_Rectangle_"
      data-name="&lt;Transparent Rectangle&gt;"
      width="32"
      height="32"
      fill="none"
    />
  </svg>
);

const EyeOpen = () => (
  <svg width="23" height="23" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" fill="#000000">
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M1 10c0-3.9 3.1-7 7-7s7 3.1 7 7h-1c0-3.3-2.7-6-6-6s-6 2.7-6 6H1zm4 0c0-1.7 1.3-3 3-3s3 1.3 3 3-1.3 3-3 3-3-1.3-3-3zm1 0c0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2-2 .9-2 2z"
    />
  </svg>
);

const EyeClose = () => (
  <svg width="23" height="23" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" fill="#000000">
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M8 2c-1.5 0-2.8.4-3.9 1.2l.8.7C5.8 3.3 6.8 3 8 3c3.3 0 6 2.7 6 6h1c0-3.9-3.1-7-7-7zM1 3l1.6 1.5C1.6 5.7 1 7.3 1 9h1c0-1.5.5-2.8 1.4-3.8l2.2 2C5.2 7.7 5 8.3 5 9c0 1.7 1.3 3 3 3 .8 0 1.5-.3 2-.8l3 2.8.7-.7-12-11L1 3zm5.3 4.9l2.9 2.7c-.3.2-.7.4-1.2.4-1.1 0-2-.9-2-2 0-.4.1-.8.3-1.1zM11 9.5l-1-.9c-.2-.8-.9-1.5-1.8-1.6l-1-.9c.3-.1.5-.1.8-.1 1.7 0 3 1.3 3 3v.5z"
    />
  </svg>
);

export {
  ChevronLeft,
  ChevronRight,
  Teacher,
  FooterLogo,
  Video,
  Lock,
  QuizzText,
  Checked,
  Tick,
  Close,
  ArrowLeft,
  User,
  Password,
  EyeClose,
  EyeOpen,
};

export default Object.freeze({
  ChevronLeft,
  ChevronRight,
  Teacher,
  FooterLogo,
  Video,
  Lock,
  QuizzText,
  Checked,
  Tick,
  Close,
  ArrowLeft,
  User,
  Password,
  EyeClose,
  EyeOpen,
});
